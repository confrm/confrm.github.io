{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to confrm.io Confrm is a provisioning tool for IOT devices. Created to provide an easy way to update things which are embedded in walls, stuck in hard to reach boxes and halfway up the garden, it also provides a convenient mechanism to monitor those devices and configure them remotely. Most IOT devices will already have wifi stacks and http libraries, Confrm uses a basic REST API to enable those device to query a central server for updates / configuration information. Eventually we want to add more features and integrations in to larger projects - but for now we just support esp32/esp8266 devices using Arduino / platform.io. See https://github.com/confrm/confrm for the server and the following repositories for the device code: confrm-arduino-esp (ESP32, ESP8266) https://github.com/confrm/confrm-arduino-esp","title":"Home"},{"location":"#welcome-to-confrmio","text":"Confrm is a provisioning tool for IOT devices. Created to provide an easy way to update things which are embedded in walls, stuck in hard to reach boxes and halfway up the garden, it also provides a convenient mechanism to monitor those devices and configure them remotely. Most IOT devices will already have wifi stacks and http libraries, Confrm uses a basic REST API to enable those device to query a central server for updates / configuration information. Eventually we want to add more features and integrations in to larger projects - but for now we just support esp32/esp8266 devices using Arduino / platform.io. See https://github.com/confrm/confrm for the server and the following repositories for the device code: confrm-arduino-esp (ESP32, ESP8266) https://github.com/confrm/confrm-arduino-esp","title":"Welcome to confrm.io"},{"location":"quickstart/quickstart-client/","text":"Adding Confrm to Applications Arduino IDE There are three ways to add Confrm to the Arduino IDE; via the library manager, using a zip file or adding the files manually to the project. This article at maker.io covers the steps required for all three: https://www.digikey.co.uk/en/maker/blogs/2018/how-to-install-arduino-libraries The github repository for ESP32 and ESP8266 devices is https://github.com/confrm/confrm-arduino-esp . Platformio Using platformio \"confrm\" can be added to the lib_deps in platform.ini: lib_deps = other-library@2.1 confrm Or the git repository can be added directly using: lib_deps_external = https://github.com/confrm/confrm-arduino-esp.git#main In this instance using the main branch, but it could be any specific verison tag or branch. Demonstration And this video covers how to write a simple esp32 program which will register with the confrm server as a programmable node:","title":"Adding Confrm to Applications"},{"location":"quickstart/quickstart-client/#adding-confrm-to-applications","text":"","title":"Adding Confrm to Applications"},{"location":"quickstart/quickstart-client/#arduino-ide","text":"There are three ways to add Confrm to the Arduino IDE; via the library manager, using a zip file or adding the files manually to the project. This article at maker.io covers the steps required for all three: https://www.digikey.co.uk/en/maker/blogs/2018/how-to-install-arduino-libraries The github repository for ESP32 and ESP8266 devices is https://github.com/confrm/confrm-arduino-esp .","title":"Arduino IDE"},{"location":"quickstart/quickstart-client/#platformio","text":"Using platformio \"confrm\" can be added to the lib_deps in platform.ini: lib_deps = other-library@2.1 confrm Or the git repository can be added directly using: lib_deps_external = https://github.com/confrm/confrm-arduino-esp.git#main In this instance using the main branch, but it could be any specific verison tag or branch.","title":"Platformio"},{"location":"quickstart/quickstart-client/#demonstration","text":"And this video covers how to write a simple esp32 program which will register with the confrm server as a programmable node:","title":"Demonstration"},{"location":"quickstart/quickstart-confrm/","text":"Basic Confrm Server Docker The easiest way to deploy confrm is to use Docker, it is pre-packaged and works with most platforms. A server can be launched using: docker run -d --restart=unless-stopped -p 8000:80 --name confrm confrm/confrm:latest By default the data will be stored inside the container, it can be exposed using by running the container using: docker run -d --restart=always -v /path/to/data:/confrm -p 8000:80 --name confrm confrm/confrm:latest The contents of /path/to/data can then be easily backed up. Native Python The git repository can be installed using pip and run as follows: pip install --user git+https://github.com/confrm/confrm.git You will need to set up a configuration file in the following form: [basic] port = 80 host = \"0.0.0.0\" [storage] data_dir = \"/path/to/store\" After creating the config file, and specifying a data directory the server is started using: confrm_srv --config = /path/to/config","title":"Basic Confrm Server"},{"location":"quickstart/quickstart-confrm/#basic-confrm-server","text":"","title":"Basic Confrm Server"},{"location":"quickstart/quickstart-confrm/#docker","text":"The easiest way to deploy confrm is to use Docker, it is pre-packaged and works with most platforms. A server can be launched using: docker run -d --restart=unless-stopped -p 8000:80 --name confrm confrm/confrm:latest By default the data will be stored inside the container, it can be exposed using by running the container using: docker run -d --restart=always -v /path/to/data:/confrm -p 8000:80 --name confrm confrm/confrm:latest The contents of /path/to/data can then be easily backed up.","title":"Docker"},{"location":"quickstart/quickstart-confrm/#native-python","text":"The git repository can be installed using pip and run as follows: pip install --user git+https://github.com/confrm/confrm.git You will need to set up a configuration file in the following form: [basic] port = 80 host = \"0.0.0.0\" [storage] data_dir = \"/path/to/store\" After creating the config file, and specifying a data directory the server is started using: confrm_srv --config = /path/to/config","title":"Native Python"},{"location":"quickstart/quickstart-rpi/","text":"Confrm Server on Raspberry Pi (Docker) This video covers how to get a server using docker running on a Raspberry Pi, the TLDR; is: Code goes here","title":"Confrm Server on Raspberry Pi (Docker)"},{"location":"quickstart/quickstart-rpi/#confrm-server-on-raspberry-pi-docker","text":"This video covers how to get a server using docker running on a Raspberry Pi, the TLDR; is: Code goes here","title":"Confrm Server on Raspberry Pi (Docker)"}]}